#version: "3.0"
#
#services:
#  eureka:
#    build: ./eureka
#    ports:
#      - "8761:8761"
#    restart: on-failure
#    networks:
#      - trip_net
#    environment:
#      - eureka.client.service-url.defaultZone=http://host.docker.internal:8762/eureka
#
#  replication-eureka:
#    build: ./replication-eureka
#    ports:
#      - "8762:8762"
#    restart: on-failure
#    networks:
#      - trip_net
#    environment:
#      - eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka
#
#  api-gateway:
#    build: ./gateway
#    ports:
#        - "8000:8000"
#    depends_on:
#      - eureka
#      - replication-eureka
#    restart: on-failure
#    networks:
#      - trip_net
#    environment:
#      - spring.cloud.gateway.routes.uri=http://auth-service:8001
#      - eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka, http://host.docker.internal:8762/eureka,
#
#  auth-service:
#    build: ./auth-service
#    ports:
#      - "8001:8001"
#    depends_on:
#      - eureka
#      - replication-eureka
#    restart: on-failure
#    networks:
#      - trip_net
#    environment:
#      - eureka.client.service-url.defaultZone=http://host.docker.internal:8761/eureka, http://host.docker.internal:8762/eureka,
#
#networks:
#  trip_net:
#    driver: bridge


version: "3.0"

services:
  zookeeper:
    container_name: zookeeper
    image: debezium/zookeeper:1.4
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"

  kafka:
    container_name: kafka
    image: debezium/kafka:1.4
    depends_on:
      - zookeeper
    links:
      - zookeeper:zookeeper
    ports:
      - "9092:9092"
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181 # kafka가 zookeeper에 커넥션하기 위한 대상을 지정